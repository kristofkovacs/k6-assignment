[{"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/App.js":"1","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/index.js":"2","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/api/starwars.js":"3","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/SearchBar.js":"4","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/List.js":"5","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/Card.js":"6","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/Detail.js":"7"},{"size":2903,"mtime":1610663212180,"results":"8","hashOfConfig":"9"},{"size":146,"mtime":1610554279542,"results":"10","hashOfConfig":"9"},{"size":137,"mtime":1610665953284,"results":"11","hashOfConfig":"9"},{"size":1146,"mtime":1610609877260,"results":"12","hashOfConfig":"9"},{"size":642,"mtime":1610656169397,"results":"13","hashOfConfig":"9"},{"size":2148,"mtime":1610659511600,"results":"14","hashOfConfig":"9"},{"size":2224,"mtime":1610660924887,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g7bgc3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/App.js",["32","33"],"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/index.js",[],"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/api/starwars.js",[],"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/SearchBar.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    onSearch(searchTerm);\n  }, [searchTerm]);\n\n  return (\n    <InputGroup>\n      <Input\n        placeholder=\"Search..\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        bgColor=\"white\"\n      />\n      {searchTerm.length && (\n        <InputRightElement width=\"4.5rem\">\n          <IconButton\n            size=\"sm\"\n            color=\"gray.500\"\n            onClick={(e) => setSearchTerm(\"\")}\n            aria-label=\"Clear Search\"\n            variant=\"ghost\"\n            icon={<CloseIcon />}\n            _hover={{\n              background: \"white\",\n              color: \"gray.700\",\n            }}\n            _active={{\n              background: \"white\",\n              color: \"gray.800\",\n            }}\n          />\n        </InputRightElement>\n      )}\n    </InputGroup>\n  );\n};\n\nexport default SearchBar;\n","/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/List.js",[],"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/Card.js",["35","36"],"/Users/kristof.kovacsegri/Desktop/projects/k6-assignment/src/components/Detail.js",["37","38"],"import React, { useState, useEffect } from \"react\";\n\nimport starwars from \"../api/starwars\";\nimport axios from \"axios\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  Flex,\n  Button,\n  Spinner,\n} from \"@chakra-ui/react\";\n\nconst Detail = ({ isOpen, onClose, movieLinks, name }) => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let axiosRequests = [];\n    movieLinks.forEach((movieLink) => {\n      axiosRequests.push(starwars.get(movieLink));\n    });\n    axios.all(axiosRequests).then(\n      axios.spread((...responses) => {\n        setMovies(responses);\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    if (movies.length) {\n      setLoading(false);\n    }\n    console.log(loading);\n  }, [movies]);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Films {name} was in</ModalHeader>\n        <ModalCloseButton />\n\n        <ModalBody>\n          {loading ? (\n            <Flex\n              justify=\"center\"\n              align=\"center\"\n              justifySelf=\"center\"\n              alignSelf=\"center\"\n              py={12}\n            >\n              <Spinner\n                thickness=\"4px\"\n                speed=\"0.5s\"\n                emptyColor=\"gray.200\"\n                color=\"teal.500\"\n                size=\"lg\"\n              />\n            </Flex>\n          ) : (\n            <>\n              {movies.map(\n                ({ data: { title, release_date, opening_crawl } }) => {\n                  return (\n                    <Flex bg=\"gray.200\" m={2} p={2} direction=\"column\">\n                      <Text>{title}</Text>\n                      <Text>{release_date}</Text>\n                      <Text>{`${opening_crawl.substring(0, 150)}...`}</Text>\n                    </Flex>\n                  );\n                }\n              )}\n            </>\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n            Close\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Detail;\n",{"ruleId":"39","severity":1,"message":"40","line":7,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":45,"column":6,"nodeType":"45","endLine":45,"endColumn":21,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":15,"column":6,"nodeType":"45","endLine":15,"endColumn":18,"suggestions":"48"},{"ruleId":"43","severity":1,"message":"49","line":26,"column":6,"nodeType":"45","endLine":26,"endColumn":8,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":32,"column":6,"nodeType":"45","endLine":32,"endColumn":8,"suggestions":"52"},{"ruleId":"43","severity":1,"message":"53","line":34,"column":6,"nodeType":"45","endLine":34,"endColumn":8,"suggestions":"54"},{"ruleId":"43","severity":1,"message":"55","line":41,"column":6,"nodeType":"45","endLine":41,"endColumn":14,"suggestions":"56"},"no-unused-vars","'useDisclosure' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'onSearch'. Either include it or remove the dependency array. If 'onSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["58"],"React Hook useEffect has missing dependencies: 'species' and 'speciesName'. Either include them or remove the dependency array. You can also do a functional update 'setSpeciesName(s => ...)' if you only need 'speciesName' in the 'setSpeciesName' call.",["59"],"React Hook useEffect has a missing dependency: 'homeWorld'. Either include it or remove the dependency array.",["60"],"React Hook useEffect has a missing dependency: 'movieLinks'. Either include it or remove the dependency array.",["61"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["62"],{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [debouncedTerm, term]",{"range":"75","text":"76"},"Update the dependencies array to be: [onSearch, searchTerm]",{"range":"77","text":"78"},"Update the dependencies array to be: [species, speciesName]",{"range":"79","text":"80"},"Update the dependencies array to be: [homeWorld]",{"range":"81","text":"82"},"Update the dependencies array to be: [movieLinks]",{"range":"83","text":"84"},"Update the dependencies array to be: [loading, movies]",{"range":"85","text":"86"},[1157,1172],"[debouncedTerm, term]",[335,347],"[onSearch, searchTerm]",[811,813],"[species, speciesName]",[986,988],"[homeWorld]",[724,726],"[movieLinks]",[837,845],"[loading, movies]"]